
# Docker Compose configuration for a Django development environment with PostgreSQL and pgAdmin.

# This Docker Compose file defines three services:
# 1. 'web': Django web application service.
# 2. 'db': PostgreSQL database service.
# 3. 'pgadmin': pgAdmin service for PostgreSQL administration.

# Services Details:
# - 'web' Service:
#   - Builds an image for the Django web application.
#   - Mounts the current directory as a volume for code synchronization.
#   - Exposes port 8000 on the host, forwarding it to port 8000 on the container.
#   - Depends on the 'db' service to ensure the database is available.

# - 'db' Service:
#   - Uses the official PostgreSQL image from Docker Hub.
#   - Sets environment variables for the PostgreSQL database name, username, and password.
#   - Configures a health check to ensure the availability of the PostgreSQL service.
#   - Exposes port 5432 on the host, forwarding it to port 5432 on the container.

# - 'pgadmin' Service:
#   - Uses the pgAdmin image for PostgreSQL administration.
#   - Sets default email and password for pgAdmin.
#   - Exposes port 5050 on the host, forwarding it to port 80 on the container.
#   - Depends on the 'db' service to ensure the database is available.

# Volumes:
# - 'postgres_data': A volume to persist PostgreSQL data across container restarts.






version: '3'

services:

  web:
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    

  db:
    image: postgres
    environment:
      POSTGRES_DB : FlightVoyage
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD : postgres@123
      
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5  
    
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@admin.com
      PGADMIN_DEFAULT_PASSWORD: postgresadmin@1234
    ports:
      - "5050:80"
    depends_on:
      - db
    
volumes:
  postgres_data: